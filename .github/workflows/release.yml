name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable corepack for pnpm
        run: |
          corepack enable
          corepack prepare pnpm@10.13.1 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Build extension
        run: pnpm build

      - name: Create release zip
        run: |
          cd dist
          zip -r ../github-tab-indent-extension-${{ github.ref_name }}.zip .
          cd ..

      - name: Create Release with auto-generated notes
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const tagName = context.ref.replace('refs/tags/', '');
            
            // GitHubの自動生成リリースノートを使用してリリースを作成
            const { data: release } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tagName,
              name: `Release ${tagName}`,
              generate_release_notes: true,  // 自動生成リリースノートを有効化
              draft: false,
              prerelease: false
            });
            
            // アセットをアップロード
            const assetPath = `./github-tab-indent-extension-${tagName}.zip`;
            const assetName = `github-tab-indent-extension-${tagName}.zip`;
            const assetContent = fs.readFileSync(assetPath);
            
            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.id,
              name: assetName,
              data: assetContent,
              headers: {
                'content-type': 'application/zip',
                'content-length': assetContent.length
              }
            });